In the previous exercise, we have seen how we can make use of the React transition group, in order to add pitch concessions to our React application, and that's one fun way of adding animations. Now, there are many NPM packages that support adding animations to your React application. Now amongst them I have selected one, which I find to be interesting to demonstrate how we can add React animations, and by all means this is not only React animations NPM module that is available out there, you can try out various ones that are out there and then select whichever one that you find interesting and useful for your specific React applications. Now, in this exercise, I'm going to demonstrate the use of React animation components, and add in a couple of animations to our application. To get started on this exercise, in your project, add the React animation components 3.0.0 to our application, and since this also requires prop-types, so let me add that also into place once I installed this. So, yarn add prop-types 15.6.0 to our application. After writing these two, let's now go to our application and add a couple of animations. Going to our application, let me open the home component. In the home component, I'm going to import from React animation components, I'll import FadeTransform from React animation components. So, this allows me to do some fadeTransformation, both feeding and transformation can be applied to React elements that are enclosed inside this fadeTransform. So, what kind of transition am I going to apply? So, to do that, I will move into the vendor card component. So, here I'm going to apply the FadeTransform to the card here. So, I'll say fadeTransform. So, this applies both fade and transform properties to my React elements here, FadeTransform in, and then this takes as property as transformProps, exitTransform scale zero point five translate Y minus 50 percent. When I apply this FadeTransform to this card, this card will initially be out of the screen in a small random pop up on to the screen then the card is rendered in the view. So, that's the small animation that I'm having here. Now, again I am just adding in just to demonstrate to you how you can add transformations to your application, and I'm fond of this FadeTransform from React transition, and which I've tried various kinds and this seems to be an interesting animation to add to various elements in your React application. You can try out videos. There are many more of these components in React animation components, you can try out many of them, and then see which one you like to do. So, that is what I will apply to the card here. In addition, I'm going to go into the dish detail component. So, this FadeTransform applying to the home component, I'll go to the dish detail component, and then add a few animations in here. In the dish detailed component, let me import from React animation components. Let me import fadeTransform, then fade, and then stagger. These three and then I'll show you how I apply these three. FadeTransform, you understand briefly from the way I applied it earlier. So, the FadeTransform was I just transform the elements fade in and get transformed. So, the translate Y means that from above, they will fall into place. Then you see the animation, it become even more clear. Now, I'm going to apply exactly the same FadeTransform to the card in here. So, going into this card here, I'm going to apply that same FadeTransform to this card, and form their comments. When the comments are being rendered, I will apply again a fade to this. So, right there after the ul, I'll say stagger in, will stagger the items in. So, when you have a list of items, you can stagger things into place like this. So, we will say right here, we'll indent that, and then in here, I'm going to apply fade into the list item here. So, we'll fade in one list item at a time, and the stagger will be one below the other. So, when you have a list of items, you can stagger in them randomly by doing this. Now again, this is by trial and error that I figured out that this looks interesting from my perspective at least, in terms of doing animation. So, let's save the changes, and then go and take a look at what this application, or what this new animations that we added do to our application. Go into the application in the browser. Let me reload the application in the browser, and you can see how the animation is applied here. So all the cards pop into the screen from behind the scenes. Now, let's go to the menu component, and then let me navigate to the details of a specific dish and watch out for the animations there. You can see how the comments are listed onto the screen in a staggered way one after another. So, when you have a list of items, the staggered way of displaying is an interesting way of adding in items one by one. So, it adds a little bit of animation to the screen. One more time, they may reload the screen and then you'll see. And of course, the cards are just simply pops up onto the screen. So, when the card is rendered, you can see the card pops up and the list of comments are laid out staggered one after another on the screen. So, that adds a little bit of animation to our application. So with this, I have demonstrated two little animations that can be added into our application to make it more interesting. Again, as I said, I am no expert at doing animations, I just added in a couple of things just out of fun to demonstrate how you can add simple animations to your React application. This is a good time for you to do a Git comment with the message React animation components.